Document Version: 20230112

The Yocto Project setup for the System Device Tree workflow is as follows.
Be sure to read everything below, as the steps will be updated in the future
if the setup script changes.

The steps in this document expect that you have already built the setup
(meta-xilinx-setup) SDK, and installed it.

* Configure you local.conf

The following items should be in your conf/local.conf.  This ensures that
the correct configurations are available, and the correct firmware version
is selected for this workflow.

# Instruct the system to use the decoupling firmware sources,
# add the following to the conf/local.conf:
PREFERRED_VERSION_fsbl-firmware = "2023.1_sdt_experimental%"
PREFERRED_VERSION_pmu-firmware = "2023.1_sdt_experimental%"
PREFERRED_VERSION_plm-firmware = "2023.1_sdt_experimental%"
PREFERRED_VERSION_psm-firmware = "2023.1_sdt_experimental%"

* Run the setup script

The setup environment should be run in a new shell (not the build shell)
to ensure that you do not contaminate the environment for your build.

We will assume below that the directory "prestep" was used for the SDK,
however you may use any path you wish.

# Source the SDK environment file
. <build>/prestep/environment-setup-x86_64-petalinux-linux

# Run the script from the same directory as this README
<build>/prestep/dt-processor.sh -c <conf> -s <dtb> -l conf/local.conf

# Note: The -l option will automatically add the necessary parameters to the
# local.conf file.  If you need to re-run this comment, you just clear the
# parameters from the end of the file.  Without the -l option the items are
# printed to the screen and must be manually added to your conf/local.conf

# For example, zynqmp:
# ./prestep/dt-processor.sh -c conf -s /proj/yocto/zu-sdt/system-top.dts -l conf/local.conf
#
# The following will be written to the end of the conf/local.conf file

# Adjust BASE_TMPDIR if you want to move the tmpdirs elsewhere
BASE_TMPDIR ?= "${TOPDIR}"
require conf/cortexa53-zynqmp-linux.conf
SYSTEM_DTFILE = "/proj/yocto/zu-sdt/system-top.dts"
BBMULTICONFIG += " cortexa53-0-zynqmp-fsbl-baremetal cortexa53-0-zynqmp-baremetal cortexa53-0-zynqmp-freertos cortexa53-1-zynqmp-baremetal cortexa53-1-zynqmp-freertos cortexa53-2-zynqmp-baremetal cortexa53-2-zynqmp-freertos cortexa53-3-zynqmp-baremetal cortexa53-3-zynqmp-freertos cortexr5-0-zynqmp-fsbl-baremetal cortexr5-0-zynqmp-baremetal cortexr5-0-zynqmp-freertos cortexr5-1-zynqmp-baremetal cortexr5-1-zynqmp-freertos microblaze-0-pmu"
FSBL_DEPENDS = ""
FSBL_MCDEPENDS = "mc::cortexa53-0-zynqmp-fsbl-baremetal:fsbl-firmware:do_deploy"
FSBL_DEPLOY_DIR = "${BASE_TMPDIR}/tmp-cortexa53-0-zynqmp-fsbl-baremetal/deploy/images/${MACHINE}"
R5FSBL_DEPENDS = ""
R5FSBL_MCDEPENDS = "mc::cortexr5-0-zynqmp-fsbl-baremetal:fsbl-firmware:do_deploy"
R5FSBL_DEPLOY_DIR = "${BASE_TMPDIR}/tmp-cortexr5-0-zynqmp-fsbl-baremetal/deploy/images/${MACHINE}"
PMU_DEPENDS = ""
PMU_MCDEPENDS = "mc::microblaze-0-pmu:pmu-firmware:do_deploy"
PMU_FIRMWARE_DEPLOY_DIR = "${BASE_TMPDIR}/tmp-microblaze-0-pmu/deploy/images/${MACHINE}"

#
# OR
#
# Versal:
# ./prestep/dt-processor.sh -c conf -s /proj/yocto/versal-sdt/system-top.dts -l conf/local.conf
#
# The following will be written to the end of the conf/local.conf file

# Adjust BASE_TMPDIR if you want to move the tmpdirs elsewhere
BASE_TMPDIR ?= "${TOPDIR}"
require conf/cortexa72-versal-linux.conf
SYSTEM_DTFILE = "/proj/yocto/versal_sdt/system-top.dts"
BBMULTICONFIG += " cortexa72-0-versal-baremetal cortexa72-0-versal-freertos cortexa72-1-versal-baremetal cortexa72-1-versal-freertos microblaze-0-pmc microblaze-0-psm cortexr5-0-versal-baremetal cortexr5-0-versal-freertos cortexr5-1-versal-baremetal cortexr5-1-versal-freertos"
PLM_DEPENDS = ""
PLM_MCDEPENDS = "mc::microblaze-0-pmc:plm-firmware:do_deploy"
PLM_DEPLOY_DIR = "${BASE_TMPDIR}/tmp-microblaze-0-pmc/deploy/images/${MACHINE}"
PSM_DEPENDS = ""
PSM_MCDEPENDS = "mc::microblaze-0-psm:psm-firmware:do_deploy"
PSM_FIRMWARE_DEPLOY_DIR = "${BASE_TMPDIR}/tmp-microblaze-0-psm/deploy/images/${MACHINE}"
PDI_PATH = "/proj/yocto/versal_sdt/project_1.pdi"

# NOTE: On versal, you MUST specify the PDI file as directed by the instructions.
# If the file is not found, it will put in a placeholder such as:
PDI_PATH = "__PATH TO PDI FILE HERE__"
# This must be set to the path of the PDI file.

# _EXIT THE NEW SHELL_  return the build environment

* Bitbake Performance Note

Each BBMULTICONFIG value requires all of the recipes to be parsed for that
configuration.  Thus each multiconfig will add more parsing time.  A long list
can lead to a very slow parse (many minutes).  To speed up parsing, it is
suggested that you trim this down to only the configurations you require.
Below is the minimum BBMULTICONFIG required:

zynqmp:
BBMULTICONFIG += " cortexa53-0-zynqmp-fsbl-baremetal microblaze-0-pmu"

versal:
BBMULTICONFIG += " microblaze-0-pmc microblaze-0-psm"

* Build your project
You should now be able to build your project normally.  See the Yocto Project
documentation if you have questions on how to work with the multiconfig
recipes.  The following is a simple build for testing.

# In the original build shell
# Build your Linux sytem:
bitbake petalinux-image-minimal

# The output will be in tmp/deploy/images/...

# If the system is QEMU capable execute QEMU using:
runqemu nographic slirp core-image-minimal
# To terminate qemu, usually the command is ctrl-a x
