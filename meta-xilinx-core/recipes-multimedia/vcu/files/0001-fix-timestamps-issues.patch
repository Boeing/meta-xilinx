From b3308c608be7ed9250b9c6732f6e0a02b1a2e985 Mon Sep 17 00:00:00 2001
From: Arthur Vinchon <arthur.vinchon@allegrodvt.com>
Date: Wed, 2 Mar 2022 02:29:48 +0530
Subject: [PATCH] fix: timestamps issues

Acked-by:Varunkumar Allagadapa <varunkumar.allagadapa@xilinx.com>
---
 base/omx_component/omx_component_dec.cpp | 32 ++++++++++++++----------
 base/omx_component/omx_component_dec.h   |  2 +-
 2 files changed, 20 insertions(+), 14 deletions(-)

diff --git a/base/omx_component/omx_component_dec.cpp b/base/omx_component/omx_component_dec.cpp
index 137bf2f..b40c770 100644
--- a/base/omx_component/omx_component_dec.cpp
+++ b/base/omx_component/omx_component_dec.cpp
@@ -58,7 +58,8 @@ static DecModule& ToDecModule(ModuleInterface& module)
 
 DecComponent::DecComponent(OMX_HANDLETYPE component, shared_ptr<MediatypeInterface> media, std::unique_ptr<DecModule>&& module, OMX_STRING name, OMX_STRING role, std::unique_ptr<ExpertiseInterface>&& expertise) :
   Component{component, media, std::move(module), std::move(expertise), name, role},
-  shouldPropagateData{true}, oldTimeStamp{-1}
+  oldTimeStamp{-1},
+  dataHasBeenPropagated{false}
 {
 }
 
@@ -77,8 +78,9 @@ void DecComponent::FlushComponent()
   FlushFillEmptyBuffers(true, true);
   std::unique_lock<std::mutex> lock(mutex);
   transmit.clear();
+  oldTimeStamp = -1;
+  dataHasBeenPropagated = false;
   lock.unlock();
-  shouldPropagateData = true;
 }
 
 void DecComponent::AssociateCallBack(BufferHandleInterface* empty_, BufferHandleInterface* fill_)
@@ -104,8 +106,8 @@ void DecComponent::AssociateCallBack(BufferHandleInterface* empty_, BufferHandle
     {
       callbacks.EventHandler(component, app, OMX_EventBufferFlag, output.index, emptyHeader.nFlags, nullptr);
       transmit.clear();
-      shouldPropagateData = true;
       oldTimeStamp = -1;
+      dataHasBeenPropagated = false;
     }
 
     if(IsCompMarked(emptyHeader.hMarkTargetComponent, component))
@@ -351,22 +353,26 @@ void DecComponent::TreatEmptyBufferCommand(Task* task)
 
   if(!isInputParsed || isEarlyCallbackUsed)
   {
-    bool isEndOfFrameFlagRaised = (header->nFlags & OMX_BUFFERFLAG_ENDOFFRAME);
+    /* we suppose that a timestamp changes is a frame changes [concealment] */
+    bool const transmitTimeStamp = (oldTimeStamp != header->nTimeStamp);
 
-    if(isEndOfFrameFlagRaised && !isEarlyCallbackUsed)
+    if(transmitTimeStamp)
+    {
       transmit.push_back(PropagatedData { header->hMarkTargetComponent, header->pMarkData, header->nTickCount, header->nTimeStamp, header->nFlags });
+      oldTimeStamp = header->nTimeStamp;
+      dataHasBeenPropagated = true;
+    }
     else
     {
-      /* Concealment case(header->nFlags EndOfFrame is missing): propagate data if timestamps differ */
-      shouldPropagateData |= (oldTimeStamp != header->nTimeStamp);
-
-      if(shouldPropagateData)
+      bool isEndOfFrameFlagRaised = (header->nFlags & OMX_BUFFERFLAG_ENDOFFRAME);
+      if(isEndOfFrameFlagRaised)
       {
-        transmit.push_back(PropagatedData { header->hMarkTargetComponent, header->pMarkData, header->nTickCount, header->nTimeStamp, header->nFlags });
-        oldTimeStamp = header->nTimeStamp;
+        if(!dataHasBeenPropagated)
+        {
+          transmit.push_back(PropagatedData { header->hMarkTargetComponent, header->pMarkData, header->nTickCount, header->nTimeStamp, header->nFlags });
+        }
+        dataHasBeenPropagated = false;
       }
-
-      shouldPropagateData = isEndOfFrameFlagRaised;
     }
   }
 
diff --git a/base/omx_component/omx_component_dec.h b/base/omx_component/omx_component_dec.h
index 6214856..07d062e 100644
--- a/base/omx_component/omx_component_dec.h
+++ b/base/omx_component/omx_component_dec.h
@@ -76,7 +76,7 @@ private:
   void TreatEmptyBufferCommand(Task* task) override;
   std::list<PropagatedData> transmit;
   std::mutex mutex;
-  bool shouldPropagateData;
   OMX_TICKS oldTimeStamp;
+  bool dataHasBeenPropagated;
 };
 
-- 
2.17.1

