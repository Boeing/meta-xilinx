Restore newselect syscall override of select syscall

Commit 4c3df0eba5e8fe98f0de917ade9b2ebba6951c5f removed the check and override
of select syscall with newselect if newselect was defined.

This code path, using select instead of pselect is only executed when
ASSUME_PSELECT is not enabled.  This happens on microblaze when the
kernel version is set below 3.15.

On Microblaze select is not implemented, only newselect is.  So this automatic
conversion from select to newselect syscall is expected.  The original
implementation of the select to newselect syscall was part of:

  commit 26f28fd73d20df8847d93f88b6e2a7bd3bd9bf51
  Author: Adhemerval Zanella <adhemerval.zanella@linaro.org>
  Date:   Fri Nov 18 14:27:03 2016 -0200

    Consolidate Linux select implementation
    
    This patch consolidates the select Linux syscall implementation on
    sysdeps/unix/sysv/linux/select.c.  The changes are:
    
      1. Remove select from auto-generation syscalls.list on the architecture
         that uses __NR_select.
      2. Remove generic implementation add a default one that handle all
         current cases (with the expection of alpha)
         The new default implementation will either use __NR_select if
         available of fallback to __NR_pselect6 otherwise.
      3. Add a alpha outlier implementation which requires old compatibility
         symbols.

Upstream-Status: Submitted [https://sourceware.org/bugzilla/show_bug.cgi?id=28883]

Signed-off-by: Mark Hatle <mark.hatle@xilinx.com>

diff --git a/sysdeps/unix/sysv/linux/select.c b/sysdeps/unix/sysv/linux/select.c
index da25b4b4cfe..0f4c67aa29e 100644
--- a/sysdeps/unix/sysv/linux/select.c
+++ b/sysdeps/unix/sysv/linux/select.c
@@ -101,6 +116,10 @@ __select64 (int nfds, fd_set *readfds, fd_set *writefds, fd_set *exceptfds,
     TIMESPEC_TO_TIMEVAL (timeout, pts32);
   return r;
 # else
+#  ifdef __NR__newselect
+#   undef __NR_select
+#   define __NR_select __NR__newselect
+#  endif
   struct timeval tv32, *ptv32 = NULL;
   if (pts64 != NULL)
     {
